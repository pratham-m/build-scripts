# ----------------------------------------------------------------------------
#
# Package             : <accepts>
# Source Repo         : <https://github.com/jshttp/accepts>
# Travis Job Link     : <https://travis-ci.com/github/genisysram/accepts>
# Created travis.yml  : <No>
# Maintainer          : <ramakrishna.s@genisys-group.com>
                        <sethp@us.ibm.com>
#
# Script License      : Apache License, Version 2 or later
#
# ----------------------------------------------------------------------------

sudo: false
arch:
    - amd64
    - ppc64le
language: node_js
node_js:
  - "0.6"
  - "0.8"
  - "0.10"
  - "0.12"
  - "1.8"
  - "2.5"
  - "3.3"
  - "4.9"
  - "5.12"
  - "6.17"
  - "7.10"
  - "8.16"
  - "9.11"
  - "10.15"
  - "11.14"
  - "12.0"

dist: trusty
env:
  global:
    # Suppress Node.js 0.6 compile warnings
    - "CXXCOM='$CXX -o $TARGET -c $CXXFLAGS $CCFLAGS -Wno-unused-local-typedefs -Wno-maybe-uninitialized -Wno-narrowing -Wno-strict-overflow $_CCCOMCOM $SOURCES'"
cache:
  directories:
    - node_modules
before_install:
  - |
    # Setup utility functions
    function node_version_lt () {
      [[ "$(v "$TRAVIS_NODE_VERSION")" -lt "$(v "${1}")" ]]
    }
    function npm_module_installed () {
      npm -lsp ls | grep -Fq "$(pwd)/node_modules/${1}:${1}@"
    }
    function npm_remove_module_re () {
      node -e '
        fs = require("fs");
        p = JSON.parse(fs.readFileSync("package.json", "utf8"));
        r = RegExp(process.argv[1]);
        for (k in p.devDependencies) {
          if (r.test(k)) delete p.devDependencies[k];
        }
        fs.writeFileSync("package.json", JSON.stringify(p, null, 2) + "\n");
      ' "$@"
    }
    function npm_use_module () {
      node -e '
        fs = require("fs");
        p = JSON.parse(fs.readFileSync("package.json", "utf8"));
        p.devDependencies[process.argv[1]] = process.argv[2];
        fs.writeFileSync("package.json", JSON.stringify(p, null, 2) + "\n");
      ' "$@"
    }
    function v () {
      tr '.' '\n' <<< "${1}" \
        | awk '{ printf "%03d", $0 }' \
        | sed 's/^0*//'
    }
  # Setup Node.js version-specific dependencies
  - |
    # Configure eslint for linting
    if node_version_lt '6.0'; then npm_remove_module_re '^eslint(-|$)'
    fi
  - |
    # Configure mocha for testing
    if   node_version_lt '0.8' ; then npm_use_module 'mocha' '1.21.5'
    elif node_version_lt '0.10'; then npm_use_module 'mocha' '2.5.3'
    elif node_version_lt '4.0' ; then npm_use_module 'mocha' '3.5.3'
    elif node_version_lt '6.0' ; then npm_use_module 'mocha' '5.2.0'
    fi
  - |
    # Configure nyc for testing
    if   node_version_lt '0.10'; then npm_remove_module_re '^nyc$'
    elif node_version_lt '4.0' ; then npm_use_module 'nyc' '10.3.2'
    elif node_version_lt '6.0' ; then npm_use_module 'nyc' '11.9.0'
    fi
  # Update Node.js modules
  - |
    # Prune & rebuild node_modules
    if [[ -d node_modules ]]; then
      npm prune
      npm rebuild
    fi
    
   #Excluding below versions since they are not supported by ppc64le    
jobs: 
  exclude:
    - node_js: "0.6"
      arch: ppc64le
    - node_js: "0.8"
      arch: ppc64le
    - node_js: "0.10"
      arch: ppc64le
    - node_js: "0.12"
      arch: ppc64le
    - node_js: "1.8"
      arch: ppc64le
    - node_js: "2.5"
      arch: ppc64le
    - node_js: "3.3"
      arch: ppc64le 
   
before_scrpt:
  - |
    # Contents of node_modules
    npm -s ls ||:
script:
  - |
    # Run test script, depending on istanbul install
    if npm_module_installed 'istanbul'; then npm run-script test-travis
    else npm test
    fi
  - |
    # Run linting, if eslint exists
    if npm_module_installed 'eslint'; then npm run-script lint
    fi
after_script:
  - |
    # Upload coverage to coveralls if exists
    if [[ -d .nyc_output ]]; then
      npm install --save-dev coveralls@2
      nyc report --reporter=text-lcov | coveralls
    fi
 
 
